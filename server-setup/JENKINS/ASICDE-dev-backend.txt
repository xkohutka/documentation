pipeline {
        
        agent any

        stages {
            stage("Clean workspace"){
                steps{
                    cleanWs()
                }
            }
            stage("Pull repository"){
                steps{
                    withCredentials([sshUserPrivateKey(credentialsId: "github", keyFileVariable: 'keyfile')]) {    
                        script{
                            sh "GIT_SSH_COMMAND='ssh -i ${keyfile} -o IdentitiesOnly=yes' git clone -b dev git@github.com:ASICDE/asicde-backend.git ."
                        }
                    }
                }
            }
            stage("Build maven project"){
                steps{
                    script{
                        sh "mvn -DskipTests clean deploy"
                    }
                }
            }
            // stage('Run tests') { 
            //     steps {
            //         sh 'mvn test' 
            //     }
            // }
            stage('Build & push docker images') {
                steps {
                    script {
                            withCredentials([usernamePassword(credentialsId: 'nexus', usernameVariable: 'user', passwordVariable: 'pass')]) {
                            sh "docker login -u ${user} -p ${pass} http://localhost:8082"
                            // dir("parser"){
                            //     docker.build("localhost:8082/asicde/parser-dev:${env.BUILD_ID}")
                            //     sh "docker image tag localhost:8082/asicde/parser-dev:${env.BUILD_ID} localhost:8082/asicde/parser-dev:latest"
                            //     sh "docker push localhost:8082/asicde/parser-dev:${env.BUILD_ID}"
                            //     sh "docker push localhost:8082/asicde/parser-dev:latest"
                            // }
                            dir("core"){
                                docker.build("localhost:8082/asicde/core-dev:${env.BUILD_ID}")
                                sh "docker image tag localhost:8082/asicde/core-dev:${env.BUILD_ID} localhost:8082/asicde/core-dev:latest"
                                sh "docker push localhost:8082/asicde/core-dev:${env.BUILD_ID}"
                                sh "docker push localhost:8082/asicde/core-dev:latest"
                            }
                        }
                    }
                }
            }
            // stage('Deploy dev') {
            //     steps {
            //         build job: "ASICDE-deploy-dev", wait: true
            //     }
            // }
        }
        
        post {
            failure {
                discordSend description: "Build failed! :cry:", link: "${env.BUILD_URL}", result: currentBuild.currentResult, title: "${env.JOB_NAME}", webhookURL: "https://discord.com/api/webhooks/907804702895398942/vT7kJasQoUXxERM7Ixqrv65bQvB6kQ4o7hOkdtP_dt-A7BVgEgmwkriZdW1llUogajab"
            }
            success {
                discordSend description: "Build success! :partying_face:", link: "${env.BUILD_URL}", result: currentBuild.currentResult, title: "${env.JOB_NAME}", webhookURL: "https://discord.com/api/webhooks/907804702895398942/vT7kJasQoUXxERM7Ixqrv65bQvB6kQ4o7hOkdtP_dt-A7BVgEgmwkriZdW1llUogajab"
            }
        }
    }